Apps.Fib.Board.show (x: U60) (y:U60) (w: U60) (h: U60) (map: Apps.Fib.Board) : String {
  Apps.Fib.Board.show.y x (+ y h) w h map
}

Apps.Fib.Board.show.y (x: U60) (y:U60) (w: U60) (h: U60) (map: Apps.Fib.Board): String {
  if (U60.equal h 0) {
    String.nil
  }
  else {
    let string = String.concat "
" (Apps.Fib.Board.show.x (+ x w) (- y h) w map)

    String.concat string (Apps.Fib.Board.show.y x y w (U60.sub.saturated h 1) map)
  }
}

Apps.Fib.Board.show.x (x: U60) (y:U60) (w: U60) (map: Apps.Fib.Board): String {
  if (U60.equal w 0) {
    ""
  }
  else {
    let real_x = (- x w)
    let target = Apps.Fib.Board.get (Apps.Fib.Board.Key.from_u60 (+ (/ real_x 10) (* y 32))) map
    let mx  = (% real_x 10)
    let length = (U60.min 10 (+ mx w))
    let string = String.from_list (Apps.Fib.Board.show.chunk_part length (U120.shift_right target (U60.to_u120 (* 12 mx))))
    String.concat string (Apps.Fib.Board.show.x x y (U60.sub.saturated w (- 10 mx)) map)
  }
}

Apps.Fib.Board.show.chunk_part (n: U60) (chunk: U120) : List U60
Apps.Fib.Board.show.chunk_part 0 chunk = []
Apps.Fib.Board.show.chunk_part n chunk = List.cons (U120.low (U120.bitwise_and chunk (U60.to_u120 4095))) (Apps.Fib.Board.show.chunk_part (- n 1) (U120.shift_right chunk(U60.to_u120 12)))
  
